# -*- coding: utf-8 -*-
"""회귀분석.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19QmGKYV0kTR-F99NsZh_1j8nvSKpIRsr
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

# 엑셀 파일 로드
file_path = '/content/drive/MyDrive/all.result33.xlsx'
df = pd.read_excel(file_path)

df.info()

df

# 변환된 데이터 확인
df.info()

print(df.columns)

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import statsmodels.api as sm

# 독립변수와 종속변수 설정
X = df[['정류장 개수', '65세이상 인구 수', '2023년 월 평균 소득 금액', '장애인 수', '기초생활수급자 수 ', '병원수']]
y = df['2023년 인구 수 ']

# 데이터 표준화 (Standardization)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 표준화된 데이터로 데이터프레임 다시 생성
df_scaled = pd.DataFrame(X_scaled, columns=X.columns)

# 다시 종속변수 '2023년 인구 수' 추가
df_scaled['2023년 인구 수 '] = y

# 독립 변수와 종속 변수 정의
X = df_scaled.drop(columns='2023년 인구 수 ')
Y = df_scaled['2023년 인구 수 ']

# 상수항 추가
X = sm.add_constant(X)

# 다중회귀모델 적합
model = sm.OLS(Y, X).fit()

# 회귀모델 결과 출력
print(model.summary())

# 유의한 변수만 선택
significant_vars = model.pvalues[model.pvalues < 0.05].index.tolist()
if 'const' in significant_vars:
    significant_vars.remove('const')

# 유의한 변수만으로 새로운 데이터프레임 생성
X_significant = df_scaled[significant_vars]
X_significant = sm.add_constant(X_significant)

# 유의한 변수들로 새로운 회귀모델 적합
model_significant = sm.OLS(Y, X_significant).fit()

# 새로운 회귀모델 결과 출력
print(model_significant.summary())

# 계수값 가져오기
coefficients = model_significant.params

# 계수값을 데이터프레임에 곱하기
df_scaled_with_coef = df[significant_vars].copy()
for var in significant_vars:
    df_scaled_with_coef[var] = df_scaled_with_coef[var] * coefficients[var]

# 결과 출력
print(df_scaled_with_coef)

df_scaled_with_coef

df['가중치'] = df_scaled_with_coef['65세이상 인구 수']+df_scaled_with_coef['기초생활수급자 수 ']+df_scaled_with_coef['병원수']

df

import matplotlib.pyplot as plt

# 막대그래프 그리기
plt.figure(figsize=(10, 6))
plt.bar(df.index,df['가중치'], color='skyblue')
plt.xlabel('Index')
plt.ylabel('Values')
plt.title('Bar Graph of Values')
plt.show()

# 히스토그램 그리기
plt.figure(figsize=(10, 6))
plt.hist(df['가중치'], bins=10, color='green', edgecolor='black')
plt.xlabel('Values')
plt.ylabel('Frequency')
plt.title('Histogram of Values')
plt.show()

df.to_excel('/content/drive/MyDrive/weight2.xlsx')

